# docker-compose.yml для Todo App
# 
# ИНСТРУКЦИИ ПО ЗАПУСКУ:
#
# 1. ЗАПУСК ВСЕХ СЕРВИСОВ:
#    docker-compose up --build
#
# 2. ЗАПУСК В ФОНОВОМ РЕЖИМЕ:
#    docker-compose up -d --build
#
# 3. ОСТАНОВКА СЕРВИСОВ:
#    docker-compose down
#
# 4. ПРОСМОТР ЛОГОВ:
#    docker-compose logs -f
#
# 5. ПЕРЕСБОРКА ОБРАЗОВ:
#    docker-compose build --no-cache
#
# ПОРТЫ:
# - Frontend: http://localhost:3001
# - Backend: http://localhost:5000
# - Database: localhost:5432
#
# ВАЖНО: Убедитесь, что порты 3001, 5000 и 5432 свободны!

version: '3.8'

services:
  # PostgreSQL база данных
  database:
    build:
      context: ./BE
      dockerfile: Dockerfile.db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-todo}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-0000}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./BE/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - todo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend сервис
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - ./BE/.env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-5000}
      - DB_HOST=${DB_HOST:-database}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-todo}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-0000}
      - ACCESS_SECRET=${ACCESS_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - todo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend сервис
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - todo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

# Сеть для связи между сервисами
networks:
  todo-network:
    driver: bridge

# Тома для хранения данных
volumes:
  postgres_data:
    driver: local
